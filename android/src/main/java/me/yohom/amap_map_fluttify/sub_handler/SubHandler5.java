//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_map_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_map_fluttify.AmapMapFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler5 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // method
            put("com.amap.api.maps.model.Polyline::getPoints", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getPoints(" + "" + ")");
                }
            
                // invoke native method
                java.util.List<com.amap.api.maps.model.LatLng> __result__;
                try {
                    __result__ = ref.getPoints();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.LatLng item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setGeodesic", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setGeodesic(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setGeodesic(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::isGeodesic", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::isGeodesic(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isGeodesic();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setDottedLine", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setDottedLine(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDottedLine(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::isDottedLine", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::isDottedLine(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isDottedLine();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setWidth", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setWidth(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setWidth(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getWidth", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getWidth(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getWidth();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setColor", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getColor", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getColor(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setZIndex", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setZIndex(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZIndex(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getZIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setVisible", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setVisible(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::isVisible", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getNearestLatLng", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.LatLng var1 = __var1RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getNearestLatLng(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.LatLng __result__;
                try {
                    __result__ = ref.getNearestLatLng(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setTransparency", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setTransparency(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTransparency(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setAboveMaskLayer", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setAboveMaskLayer(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAboveMaskLayer(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setCustomTexture", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.BitmapDescriptor var1 = __var1RefId__ != null ? (com.amap.api.maps.model.BitmapDescriptor) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setCustomTexture(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomTexture(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setOptions", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.PolylineOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.PolylineOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setOptions(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setOptions(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getOptions", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getOptions(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.PolylineOptions __result__;
                try {
                    __result__ = ref.getOptions();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setCustemTextureIndex", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.util.List<Integer> var1 = (java.util.List<Integer>) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setCustemTextureIndex(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustemTextureIndex((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setShownRatio", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setShownRatio(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setShownRatio(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setShownRange", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setShownRange(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setShownRange(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getShownRatio", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getShownRatio(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getShownRatio();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::showPolylineRangeEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::showPolylineRangeEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.showPolylineRangeEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::isShowPolylineRangeEnable", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::isShowPolylineRangeEnable(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isShowPolylineRangeEnable();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setPolylineShowRange", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setPolylineShowRange(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPolylineShowRange(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getPolylineShownRangeBegin", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getPolylineShownRangeBegin(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getPolylineShownRangeBegin();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getPolylineShownRangeEnd", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getPolylineShownRangeEnd(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getPolylineShownRangeEnd();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setFootPrintTexture", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.BitmapDescriptor var1 = __var1RefId__ != null ? (com.amap.api.maps.model.BitmapDescriptor) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setFootPrintTexture(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFootPrintTexture(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getFootPrintTexture", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getFootPrintTexture(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.BitmapDescriptor __result__;
                try {
                    __result__ = ref.getFootPrintTexture();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setFootPrintGap", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setFootPrintGap(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setFootPrintGap(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getFootPrintGap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getFootPrintGap(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getFootPrintGap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setEraseTexture", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
                // ref arg
                Integer __var2RefId__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.maps.model.BitmapDescriptor var2 = __var2RefId__ != null ? (com.amap.api.maps.model.BitmapDescriptor) getHEAP().get(__var2RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setEraseTexture(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setEraseTexture(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getEraseTexture", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getEraseTexture(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.BitmapDescriptor __result__;
                try {
                    __result__ = ref.getEraseTexture();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getEraseVisible", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getEraseVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.getEraseVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setEraseColor", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setEraseColor(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setEraseColor(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::getEraseColor", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::getEraseColor(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getEraseColor();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.Polyline::setCustomTextureList", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.BitmapDescriptor> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.BitmapDescriptor>) var1).add((com.amap.api.maps.model.BitmapDescriptor) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.Polyline ref = (com.amap.api.maps.model.Polyline) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.Polyline@" + refId + "::setCustomTextureList(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomTextureList((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::setDefaultOptions", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.BuildingOverlayOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.BuildingOverlayOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::setDefaultOptions(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDefaultOptions(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::getDefaultOptions", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::getDefaultOptions(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.BuildingOverlayOptions __result__;
                try {
                    __result__ = ref.getDefaultOptions();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::setCustomOptions", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.List<com.amap.api.maps.model.BuildingOverlayOptions> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.BuildingOverlayOptions>) var1).add((com.amap.api.maps.model.BuildingOverlayOptions) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::setCustomOptions(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomOptions((ArrayList) var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::getCustomOptions", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::getCustomOptions(" + "" + ")");
                }
            
                // invoke native method
                java.util.List<com.amap.api.maps.model.BuildingOverlayOptions> __result__;
                try {
                    __result__ = ref.getCustomOptions();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.BuildingOverlayOptions item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::destroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::destroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::getId", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::getId(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::setZIndex", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::setZIndex(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setZIndex(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::getZIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::getZIndex(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::setVisible", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::setVisible(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisible(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.model.BuildingOverlay::isVisible", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.model.BuildingOverlay ref = (com.amap.api.maps.model.BuildingOverlay) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.model.BuildingOverlay@" + refId + "::isVisible(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isVisible();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks::canDismiss", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                java.lang.Object var1 = (java.lang.Object) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks ref = (com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks@" + refId + "::canDismiss(" + var1 + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.canDismiss(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks::onDismiss", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.view.View var1 = __var1RefId__ != null ? (android.view.View) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                java.lang.Object var2 = (java.lang.Object) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks ref = (com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks@" + refId + "::onDismiss(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onDismiss(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks::onNotifySwipe", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks ref = (com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.SwipeDismissTouchListener.DismissCallbacks@" + refId + "::onNotifySwipe(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onNotifySwipe();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::getMap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::getMap(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMap __result__;
                try {
                    __result__ = ref.getMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::onCreate", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.os.Bundle var1 = __var1RefId__ != null ? (android.os.Bundle) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::onCreate(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onCreate(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::onResume", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::onResume(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onResume();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::onPause", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::onPause(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onPause();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::onDestroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::onDestroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onDestroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::onLowMemory", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::onLowMemory(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onLowMemory();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::onSaveInstanceState", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.os.Bundle var1 = __var1RefId__ != null ? (android.os.Bundle) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::onSaveInstanceState(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onSaveInstanceState(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.TextureMapView::setVisibility", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.TextureMapView ref = (com.amap.api.maps.TextureMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.TextureMapView@" + refId + "::setVisibility(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisibility(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::calculateLineDistance", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLng var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.LatLng var1 = __var1RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::calculateLineDistance(" + var0 + var1 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = com.amap.api.maps.AMapUtils.calculateLineDistance(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::calculateArea__com_amap_api_maps_model_LatLng__com_amap_api_maps_model_LatLng", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.LatLng var0 = __var0RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.LatLng var1 = __var1RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::calculateArea(" + var0 + var1 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = com.amap.api.maps.AMapUtils.calculateArea(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::calculateArea__List_com_amap_api_maps_model_LatLng_", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var0RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var0");
                java.util.List<com.amap.api.maps.model.LatLng> var0 = new ArrayList<>();
                for (int refId : var0RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.LatLng>) var0).add((com.amap.api.maps.model.LatLng) getHEAP().get(refId));
                }
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::calculateArea(" + var0 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = com.amap.api.maps.AMapUtils.calculateArea((ArrayList) var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::getLatestAMapApp", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                android.content.Context var0 = __var0RefId__ != null ? (android.content.Context) getHEAP().get(__var0RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::getLatestAMapApp(" + var0 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.AMapUtils.getLatestAMapApp(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::openAMapNavi", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.NaviPara var0 = __var0RefId__ != null ? (com.amap.api.maps.model.NaviPara) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::openAMapNavi(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.AMapUtils.openAMapNavi(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::openAMapPoiNearbySearch", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.PoiPara var0 = __var0RefId__ != null ? (com.amap.api.maps.model.PoiPara) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::openAMapPoiNearbySearch(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.AMapUtils.openAMapPoiNearbySearch(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::openAMapDrivingRoute", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.RoutePara var0 = __var0RefId__ != null ? (com.amap.api.maps.model.RoutePara) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::openAMapDrivingRoute(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.AMapUtils.openAMapDrivingRoute(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::openAMapTransitRoute", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.RoutePara var0 = __var0RefId__ != null ? (com.amap.api.maps.model.RoutePara) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::openAMapTransitRoute(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.AMapUtils.openAMapTransitRoute(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMapUtils::openAMapWalkingRoute", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var0RefId__ = (Integer) ((Map<String, Object>) __args__).get("var0");
                com.amap.api.maps.model.RoutePara var0 = __var0RefId__ != null ? (com.amap.api.maps.model.RoutePara) getHEAP().get(__var0RefId__) : null;
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.content.Context var1 = __var1RefId__ != null ? (android.content.Context) getHEAP().get(__var1RefId__) : null;
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMapUtils::openAMapWalkingRoute(" + var0 + var1 + ")");
                }
            
                // invoke native method
                try {
                    com.amap.api.maps.AMapUtils.openAMapWalkingRoute(var0, var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.animation.Animation var1 = __var1RefId__ != null ? (com.amap.api.maps.model.animation.Animation) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::setInfoWindowAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowAnimation(var1, new com.amap.api.maps.model.animation.Animation.AnimationListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowAnimation::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onAnimationStart() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onAnimationStart(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationStart",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onAnimationEnd() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onAnimationEnd(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.animation.Animation.AnimationListener::onAnimationEnd",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowAppearAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.animation.Animation var1 = __var1RefId__ != null ? (com.amap.api.maps.model.animation.Animation) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::setInfoWindowAppearAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowAppearAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowBackColor", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::setInfoWindowBackColor(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowBackColor(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowBackEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::setInfoWindowBackEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowBackEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowBackScale", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                Double var2 = (Double) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::setInfoWindowBackScale(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowBackScale(new Double(var1).floatValue(), new Double(var2).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowDisappearAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.animation.Animation var1 = __var1RefId__ != null ? (com.amap.api.maps.model.animation.Animation) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::setInfoWindowDisappearAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowDisappearAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::setInfoWindowMovingAnimation", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.animation.Animation var1 = __var1RefId__ != null ? (com.amap.api.maps.model.animation.Animation) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::setInfoWindowMovingAnimation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowMovingAnimation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.InfoWindowAnimationManager::startAnimation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.InfoWindowAnimationManager ref = (com.amap.api.maps.InfoWindowAnimationManager) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.InfoWindowAnimationManager@" + refId + "::startAnimation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.startAnimation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::getMap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::getMap(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.AMap __result__;
                try {
                    __result__ = ref.getMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onCreate", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.os.Bundle var1 = __var1RefId__ != null ? (android.os.Bundle) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onCreate(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onCreate(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onResume", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onResume(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onResume();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onPause", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onPause(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onPause();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onDestroy", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onDestroy(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onDestroy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onLowMemory", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onLowMemory(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onLowMemory();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onSaveInstanceState", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.os.Bundle var1 = __var1RefId__ != null ? (android.os.Bundle) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onSaveInstanceState(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onSaveInstanceState(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::setVisibility", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::setVisibility(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setVisibility(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::setOnDismissCallbackListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::setOnDismissCallbackListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnDismissCallbackListener(new com.amap.api.maps.WearMapView.OnDismissCallback() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.WearMapView::setOnDismissCallbackListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onDismiss() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onDismiss(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.WearMapView.OnDismissCallback::onDismiss",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onNotifySwipe() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onNotifySwipe(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.WearMapView.OnDismissCallback::onNotifySwipe",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onDismiss", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onDismiss(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onDismiss();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onEnterAmbient", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                android.os.Bundle var1 = __var1RefId__ != null ? (android.os.Bundle) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onEnterAmbient(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.onEnterAmbient(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.WearMapView::onExitAmbient", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.WearMapView ref = (com.amap.api.maps.WearMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.WearMapView@" + refId + "::onExitAmbient(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.onExitAmbient();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.BaseMapView::loadWorldVectorMap", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.BaseMapView ref = (com.amap.api.maps.BaseMapView) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.BaseMapView@" + refId + "::loadWorldVectorMap(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.loadWorldVectorMap(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getCameraPosition", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getCameraPosition(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.CameraPosition __result__;
                try {
                    __result__ = ref.getCameraPosition();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMaxZoomLevel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMaxZoomLevel(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getMaxZoomLevel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMinZoomLevel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMinZoomLevel(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getMinZoomLevel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::moveCamera", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.CameraUpdate var1 = __var1RefId__ != null ? (com.amap.api.maps.CameraUpdate) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::moveCamera(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.moveCamera(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::animateCamera__com_amap_api_maps_CameraUpdate", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.CameraUpdate var1 = __var1RefId__ != null ? (com.amap.api.maps.CameraUpdate) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::animateCamera(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.animateCamera(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::animateCamera__com_amap_api_maps_CameraUpdate__com_amap_api_maps_AMap_CancelableCallback", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.CameraUpdate var1 = __var1RefId__ != null ? (com.amap.api.maps.CameraUpdate) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::animateCamera(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.animateCamera(var1, new com.amap.api.maps.AMap.CancelableCallback() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::animateCamera__com_amap_api_maps_CameraUpdate__com_amap_api_maps_AMap_CancelableCallback::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onFinish() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onFinish(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onFinish",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCancel() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCancel(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onCancel",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::animateCamera__com_amap_api_maps_CameraUpdate__int__com_amap_api_maps_AMap_CancelableCallback", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.CameraUpdate var1 = __var1RefId__ != null ? (com.amap.api.maps.CameraUpdate) getHEAP().get(__var1RefId__) : null;
                // jsonable arg
                long var2 = (long) (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::animateCamera(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.animateCamera(var1, var2, new com.amap.api.maps.AMap.CancelableCallback() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::animateCamera__com_amap_api_maps_CameraUpdate__int__com_amap_api_maps_AMap_CancelableCallback::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onFinish() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onFinish(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onFinish",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCancel() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCancel(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CancelableCallback::onCancel",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::stopAnimation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::stopAnimation(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.stopAnimation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addNavigateArrow", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.NavigateArrowOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.NavigateArrowOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addNavigateArrow(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.NavigateArrow __result__;
                try {
                    __result__ = ref.addNavigateArrow(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addPolyline", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.PolylineOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.PolylineOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addPolyline(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Polyline __result__;
                try {
                    __result__ = ref.addPolyline(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addBuildingOverlay", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addBuildingOverlay(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.BuildingOverlay __result__;
                try {
                    __result__ = ref.addBuildingOverlay();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addCircle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.CircleOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.CircleOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addCircle(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Circle __result__;
                try {
                    __result__ = ref.addCircle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addArc", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.ArcOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.ArcOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addArc(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Arc __result__;
                try {
                    __result__ = ref.addArc(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addPolygon", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.PolygonOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.PolygonOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addPolygon(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Polygon __result__;
                try {
                    __result__ = ref.addPolygon(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addGroundOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.GroundOverlayOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.GroundOverlayOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addGroundOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.GroundOverlay __result__;
                try {
                    __result__ = ref.addGroundOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addMarker", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.MarkerOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.MarkerOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addMarker(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Marker __result__;
                try {
                    __result__ = ref.addMarker(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addGL3DModel", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.GL3DModelOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.GL3DModelOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addGL3DModel(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.GL3DModel __result__;
                try {
                    __result__ = ref.addGL3DModel(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addText", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.TextOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.TextOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addText(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.Text __result__;
                try {
                    __result__ = ref.addText(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addMarkers", (__args__, __methodResult__) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) __args__).get("var1");
                java.util.ArrayList<com.amap.api.maps.model.MarkerOptions> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    ((ArrayList<com.amap.api.maps.model.MarkerOptions>) var1).add((com.amap.api.maps.model.MarkerOptions) getHEAP().get(refId));
                }
                // jsonable arg
                boolean var2 = (boolean) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addMarkers(" + var1 + var2 + ")");
                }
            
                // invoke native method
                java.util.ArrayList<com.amap.api.maps.model.Marker> __result__;
                try {
                    __result__ = ref.addMarkers((ArrayList) var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.Marker item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMapScreenMarkers", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMapScreenMarkers(" + "" + ")");
                }
            
                // invoke native method
                java.util.List<com.amap.api.maps.model.Marker> __result__;
                try {
                    __result__ = ref.getMapScreenMarkers();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.maps.model.Marker item : __result__) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addTileOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.TileOverlayOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.TileOverlayOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addTileOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.TileOverlay __result__;
                try {
                    __result__ = ref.addTileOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addHeatMapLayer", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.HeatMapLayerOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.HeatMapLayerOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addHeatMapLayer(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.HeatMapLayer __result__;
                try {
                    __result__ = ref.addHeatMapLayer(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addMultiPointOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.MultiPointOverlayOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.MultiPointOverlayOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addMultiPointOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.MultiPointOverlay __result__;
                try {
                    __result__ = ref.addMultiPointOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addParticleOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.particle.ParticleOverlayOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.particle.ParticleOverlayOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addParticleOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.particle.ParticleOverlay __result__;
                try {
                    __result__ = ref.addParticleOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::clear", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::clear(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.clear();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::clear__bool", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::clear(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.clear(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMapType", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMapType(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMapType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMapType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::isTrafficEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::isTrafficEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isTrafficEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setTrafficEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setTrafficEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTrafficEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::showMapText", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::showMapText(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.showMapText(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::showIndoorMap", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::showIndoorMap(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.showIndoorMap(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::showBuildings", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::showBuildings(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.showBuildings(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMyTrafficStyle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.MyTrafficStyle var1 = __var1RefId__ != null ? (com.amap.api.maps.model.MyTrafficStyle) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMyTrafficStyle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyTrafficStyle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMyTrafficStyle", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMyTrafficStyle(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.MyTrafficStyle __result__;
                try {
                    __result__ = ref.getMyTrafficStyle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::isMyLocationEnabled", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::isMyLocationEnabled(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isMyLocationEnabled();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMyLocationEnabled", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMyLocationEnabled(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationEnabled(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMyLocation", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMyLocation(" + "" + ")");
                }
            
                // invoke native method
                android.location.Location __result__;
                try {
                    __result__ = ref.getMyLocation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setLocationSource", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setLocationSource(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setLocationSource(new com.amap.api.maps.LocationSource() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setLocationSource::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void activate(com.amap.api.maps.LocationSource.OnLocationChangedListener var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: activate(" + "" + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.LocationSource::activate",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void deactivate() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: deactivate(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.LocationSource::deactivate",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMyLocationStyle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.MyLocationStyle var1 = __var1RefId__ != null ? (com.amap.api.maps.model.MyLocationStyle) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMyLocationStyle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationStyle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMyLocationStyle", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMyLocationStyle(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.MyLocationStyle __result__;
                try {
                    __result__ = ref.getMyLocationStyle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMyLocationType", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMyLocationType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMyLocationRotateAngle", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMyLocationRotateAngle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMyLocationRotateAngle(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getUiSettings", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getUiSettings(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.UiSettings __result__;
                try {
                    __result__ = ref.getUiSettings();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getProjection", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getProjection(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.Projection __result__;
                try {
                    __result__ = ref.getProjection();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnCameraChangeListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnCameraChangeListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnCameraChangeListener(new com.amap.api.maps.AMap.OnCameraChangeListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnCameraChangeListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onCameraChange(com.amap.api.maps.model.CameraPosition var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCameraChange(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCameraChangeListener::onCameraChange",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCameraChangeFinish(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCameraChangeListener::onCameraChangeFinish",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMapClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMapClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMapClickListener(new com.amap.api.maps.AMap.OnMapClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMapClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapClick(com.amap.api.maps.model.LatLng var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapClickListener::onMapClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMapTouchListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMapTouchListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMapTouchListener(new com.amap.api.maps.AMap.OnMapTouchListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMapTouchListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onTouch(android.view.MotionEvent var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onTouch(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapTouchListener::onTouch",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnPOIClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnPOIClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnPOIClickListener(new com.amap.api.maps.AMap.OnPOIClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnPOIClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onPOIClick(com.amap.api.maps.model.Poi var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onPOIClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnPOIClickListener::onPOIClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMyLocationChangeListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMyLocationChangeListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMyLocationChangeListener(new com.amap.api.maps.AMap.OnMyLocationChangeListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMyLocationChangeListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMyLocationChange(android.location.Location var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMyLocationChange(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMyLocationChangeListener::onMyLocationChange",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMapLongClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMapLongClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMapLongClickListener(new com.amap.api.maps.AMap.OnMapLongClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMapLongClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapLongClick(com.amap.api.maps.model.LatLng var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapLongClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapLongClickListener::onMapLongClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMarkerClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMarkerClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMarkerClickListener(new com.amap.api.maps.AMap.OnMarkerClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMarkerClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public boolean onMarkerClick(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerClickListener::onMarkerClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
                            return true;
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnPolylineClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnPolylineClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnPolylineClickListener(new com.amap.api.maps.AMap.OnPolylineClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnPolylineClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onPolylineClick(com.amap.api.maps.model.Polyline var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onPolylineClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnPolylineClickListener::onPolylineClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMarkerDragListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMarkerDragListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMarkerDragListener(new com.amap.api.maps.AMap.OnMarkerDragListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMarkerDragListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMarkerDragStart(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDragStart(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDragStart",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMarkerDrag(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDrag(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDrag",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMarkerDragEnd(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDragEnd(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDragEnd",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnInfoWindowClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnInfoWindowClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnInfoWindowClickListener(new com.amap.api.maps.AMap.OnInfoWindowClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnInfoWindowClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onInfoWindowClick(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onInfoWindowClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnInfoWindowClickListener::onInfoWindowClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setInfoWindowAdapter", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.AMap.InfoWindowAdapter var1 = __var1RefId__ != null ? (com.amap.api.maps.AMap.InfoWindowAdapter) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setInfoWindowAdapter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setInfoWindowAdapter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setCommonInfoWindowAdapter", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setCommonInfoWindowAdapter(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setCommonInfoWindowAdapter(new com.amap.api.maps.AMap.CommonInfoWindowAdapter() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setCommonInfoWindowAdapter::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public com.amap.api.maps.InfoWindowParams getInfoWindowParams(com.amap.api.maps.model.BasePointOverlay var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: getInfoWindowParams(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.CommonInfoWindowAdapter::getInfoWindowParams",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
                            return null;
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMapLoadedListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMapLoadedListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMapLoadedListener(new com.amap.api.maps.AMap.OnMapLoadedListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMapLoadedListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapLoaded() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapLoaded(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapLoadedListener::onMapLoaded",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnIndoorBuildingActiveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnIndoorBuildingActiveListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnIndoorBuildingActiveListener(new com.amap.api.maps.AMap.OnIndoorBuildingActiveListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnIndoorBuildingActiveListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void OnIndoorBuilding(com.amap.api.maps.model.IndoorBuildingInfo var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: OnIndoorBuilding(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnIndoorBuildingActiveListener::OnIndoorBuilding",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setOnMultiPointClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setOnMultiPointClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnMultiPointClickListener(new com.amap.api.maps.AMap.OnMultiPointClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setOnMultiPointClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public boolean onPointClick(com.amap.api.maps.model.MultiPointItem var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onPointClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMultiPointClickListener::onPointClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
                            return true;
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMapPrintScreen", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMapPrintScreen(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.getMapPrintScreen(new com.amap.api.maps.AMap.onMapPrintScreenListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::getMapPrintScreen::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapPrint(android.graphics.drawable.Drawable var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapPrint(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.onMapPrintScreenListener::onMapPrint",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMapScreenShot", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMapScreenShot(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.getMapScreenShot(new com.amap.api.maps.AMap.OnMapScreenShotListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::getMapScreenShot::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapScreenShot(android.graphics.Bitmap var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapScreenShot(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapScreenShotListener::onMapScreenShot__android_graphics_Bitmap",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMapScreenShot(android.graphics.Bitmap var1, int var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapScreenShot(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
                            // jsonable arg
                            int argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapScreenShotListener::onMapScreenShot__android_graphics_Bitmap__int",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getScalePerPixel", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getScalePerPixel(" + "" + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getScalePerPixel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::runOnDrawFrame", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::runOnDrawFrame(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.runOnDrawFrame();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::removecache", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::removecache(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removecache();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::removecache__com_amap_api_maps_AMap_OnCacheRemoveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::removecache(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.removecache(new com.amap.api.maps.AMap.OnCacheRemoveListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::removecache__com_amap_api_maps_AMap_OnCacheRemoveListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onRemoveCacheFinish(boolean var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onRemoveCacheFinish(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            boolean argvar1 = var1;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCacheRemoveListener::onRemoveCacheFinish",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setPointToCenter", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setPointToCenter(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPointToCenter(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMapTextZIndex", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMapTextZIndex(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapTextZIndex(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setLoadOfflineData", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setLoadOfflineData(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLoadOfflineData(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMapTextZIndex", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMapTextZIndex(" + "" + ")");
                }
            
                // invoke native method
                int __result__;
                try {
                    __result__ = ref.getMapTextZIndex();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getVersion", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap::getVersion(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = com.amap.api.maps.AMap.getVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::reloadMap", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::reloadMap(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.reloadMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setRenderFps", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setRenderFps(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRenderFps(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setIndoorBuildingInfo", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.IndoorBuildingInfo var1 = __var1RefId__ != null ? (com.amap.api.maps.model.IndoorBuildingInfo) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setIndoorBuildingInfo(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIndoorBuildingInfo(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setAMapGestureListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setAMapGestureListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setAMapGestureListener(new com.amap.api.maps.model.AMapGestureListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::setAMapGestureListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onDoubleTap(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onDoubleTap(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onDoubleTap",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onSingleTap(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onSingleTap(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onSingleTap",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onFling(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onFling(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onFling",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onScroll(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onScroll(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onScroll",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onLongPress(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onLongPress(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onLongPress",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onDown(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onDown(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onDown",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onUp(float var1, float var2) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onUp(" + var1 + var2 + ")");
                            }
            
                            // convert to jsonable data
                            // jsonable arg
                            float argvar1 = var1;
                            // jsonable arg
                            float argvar2 = var2;
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onUp",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                            put("var2", argvar2);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMapStable() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapStable(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.model.AMapGestureListener::onMapStable",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getZoomToSpanLevel", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.LatLng var1 = __var1RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var1RefId__) : null;
                // ref arg
                Integer __var2RefId__ = (Integer) ((Map<String, Object>) __args__).get("var2");
                com.amap.api.maps.model.LatLng var2 = __var2RefId__ != null ? (com.amap.api.maps.model.LatLng) getHEAP().get(__var2RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getZoomToSpanLevel(" + var1 + var2 + ")");
                }
            
                // invoke native method
                float __result__;
                try {
                    __result__ = ref.getZoomToSpanLevel(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getInfoWindowAnimationManager", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getInfoWindowAnimationManager(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.InfoWindowAnimationManager __result__;
                try {
                    __result__ = ref.getInfoWindowAnimationManager();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMaskLayerParams", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
                // jsonable arg
                int var4 = (int) ((Map<String, Object>) __args__).get("var4");
                // jsonable arg
                int var5 = (int) ((Map<String, Object>) __args__).get("var5");
                // jsonable arg
                long var6 = (long) (int) ((Map<String, Object>) __args__).get("var6");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMaskLayerParams(" + var1 + var2 + var3 + var4 + var5 + var6 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMaskLayerParams(var1, var2, var3, var4, var5, var6);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMaxZoomLevel", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMaxZoomLevel(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMaxZoomLevel(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMinZoomLevel", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMinZoomLevel(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMinZoomLevel(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::resetMinMaxZoomPreference", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::resetMinMaxZoomPreference(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.resetMinMaxZoomPreference();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMapStatusLimits", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.LatLngBounds var1 = __var1RefId__ != null ? (com.amap.api.maps.model.LatLngBounds) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMapStatusLimits(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapStatusLimits(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addCrossOverlay", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.CrossOverlayOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.CrossOverlayOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addCrossOverlay(" + var1 + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.CrossOverlay __result__;
                try {
                    __result__ = ref.addCrossOverlay(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addRouteOverlay", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addRouteOverlay(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.maps.model.RouteOverlay __result__;
                try {
                    __result__ = ref.addRouteOverlay();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (__result__ != null) {
                    jsonableResult = System.identityHashCode(__result__);
                    getHEAP().put(jsonableResult, __result__);
                }
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getViewMatrix", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getViewMatrix(" + "" + ")");
                }
            
                // invoke native method
                float[] __result__;
                try {
                    __result__ = ref.getViewMatrix();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float[] jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getProjectionMatrix", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getProjectionMatrix(" + "" + ")");
                }
            
                // invoke native method
                float[] __result__;
                try {
                    __result__ = ref.getProjectionMatrix();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float[] jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMapCustomEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMapCustomEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapCustomEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setCustomMapStylePath", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setCustomMapStylePath(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomMapStylePath(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setCustomMapStyle", (__args__, __methodResult__) -> {
                // args
                // ref arg
                Integer __var1RefId__ = (Integer) ((Map<String, Object>) __args__).get("var1");
                com.amap.api.maps.model.CustomMapStyleOptions var1 = __var1RefId__ != null ? (com.amap.api.maps.model.CustomMapStyleOptions) getHEAP().get(__var1RefId__) : null;
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setCustomMapStyle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomMapStyle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setCustomMapStyleID", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setCustomMapStyleID(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomMapStyleID(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setCustomTextureResourcePath", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setCustomTextureResourcePath(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCustomTextureResourcePath(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setRenderMode", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setRenderMode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRenderMode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getMapContentApprovalNumber", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getMapContentApprovalNumber(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getMapContentApprovalNumber();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getSatelliteImageApprovalNumber", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getSatelliteImageApprovalNumber(" + "" + ")");
                }
            
                // invoke native method
                String __result__;
                try {
                    __result__ = ref.getSatelliteImageApprovalNumber();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setMapLanguage", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setMapLanguage(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setMapLanguage(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setRoadArrowEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setRoadArrowEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRoadArrowEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setNaviLabelEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) __args__).get("var2");
                // jsonable arg
                int var3 = (int) ((Map<String, Object>) __args__).get("var3");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setNaviLabelEnable(" + var1 + var2 + var3 + ")");
                }
            
                // invoke native method
                try {
                    ref.setNaviLabelEnable(var1, var2, var3);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::setTouchPoiEnable", (__args__, __methodResult__) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) __args__).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::setTouchPoiEnable(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTouchPoiEnable(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::isTouchPoiEnable", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::isTouchPoiEnable(" + "" + ")");
                }
            
                // invoke native method
                boolean __result__;
                try {
                    __result__ = ref.isTouchPoiEnable();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::getNativeMapController", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::getNativeMapController(" + "" + ")");
                }
            
                // invoke native method
                long __result__;
                try {
                    __result__ = ref.getNativeMapController();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                long jsonableResult = __result__;
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnCameraChangeListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnCameraChangeListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnCameraChangeListener(new com.amap.api.maps.AMap.OnCameraChangeListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnCameraChangeListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onCameraChange(com.amap.api.maps.model.CameraPosition var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCameraChange(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCameraChangeListener::onCameraChange",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onCameraChangeFinish(com.amap.api.maps.model.CameraPosition var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onCameraChangeFinish(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnCameraChangeListener::onCameraChangeFinish",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnMapClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnMapClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnMapClickListener(new com.amap.api.maps.AMap.OnMapClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnMapClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapClick(com.amap.api.maps.model.LatLng var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapClickListener::onMapClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnMarkerDragListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnMarkerDragListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnMarkerDragListener(new com.amap.api.maps.AMap.OnMarkerDragListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnMarkerDragListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMarkerDragStart(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDragStart(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDragStart",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMarkerDrag(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDrag(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDrag",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                        @Override
                        public void onMarkerDragEnd(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerDragEnd(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerDragListener::onMarkerDragEnd",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnMapLoadedListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnMapLoadedListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnMapLoadedListener(new com.amap.api.maps.AMap.OnMapLoadedListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnMapLoadedListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapLoaded() {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapLoaded(" + "" + ")");
                            }
            
                            // convert to jsonable data
            
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapLoadedListener::onMapLoaded",
                                        new HashMap<String, Object>() {{
                    
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnMapTouchListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnMapTouchListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnMapTouchListener(new com.amap.api.maps.AMap.OnMapTouchListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnMapTouchListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onTouch(android.view.MotionEvent var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onTouch(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapTouchListener::onTouch",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnMarkerClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnMarkerClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnMarkerClickListener(new com.amap.api.maps.AMap.OnMarkerClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnMarkerClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public boolean onMarkerClick(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMarkerClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMarkerClickListener::onMarkerClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
                            return true;
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnPolylineClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnPolylineClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnPolylineClickListener(new com.amap.api.maps.AMap.OnPolylineClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnPolylineClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onPolylineClick(com.amap.api.maps.model.Polyline var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onPolylineClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnPolylineClickListener::onPolylineClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnPOIClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnPOIClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnPOIClickListener(new com.amap.api.maps.AMap.OnPOIClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnPOIClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onPOIClick(com.amap.api.maps.model.Poi var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onPOIClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnPOIClickListener::onPOIClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnMapLongClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnMapLongClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnMapLongClickListener(new com.amap.api.maps.AMap.OnMapLongClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnMapLongClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onMapLongClick(com.amap.api.maps.model.LatLng var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onMapLongClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnMapLongClickListener::onMapLongClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnInfoWindowClickListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnInfoWindowClickListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnInfoWindowClickListener(new com.amap.api.maps.AMap.OnInfoWindowClickListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnInfoWindowClickListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void onInfoWindowClick(com.amap.api.maps.model.Marker var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: onInfoWindowClick(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnInfoWindowClickListener::onInfoWindowClick",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
            // method
            put("com.amap.api.maps.AMap::addOnIndoorBuildingActiveListener", (__args__, __methodResult__) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) __args__).get("refId");
                com.amap.api.maps.AMap ref = (com.amap.api.maps.AMap) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.maps.AMap@" + refId + "::addOnIndoorBuildingActiveListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.addOnIndoorBuildingActiveListener(new com.amap.api.maps.AMap.OnIndoorBuildingActiveListener() {
                        // method channel
                        MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.maps.AMap::addOnIndoorBuildingActiveListener::Callback");
                        android.os.Handler handler = new android.os.Handler(android.os.Looper.getMainLooper());
            
                        // call dart method
                        @Override
                        public void OnIndoorBuilding(com.amap.api.maps.model.IndoorBuildingInfo var1) {
                            // print log
                            if (getEnableLog()) {
                                Log.d("java-callback", "fluttify-java-callback: OnIndoorBuilding(" + var1 + ")");
                            }
            
                            // convert to jsonable data
                            // ref arg
                            final Integer argvar1;
                            if (var1 != null) {
                                argvar1 = System.identityHashCode(var1);
                                getHEAP().put(argvar1, var1);
                            } else {
                                argvar1 = null;
                            }
            
                            // call dart method
                            handler.post(new Runnable() {
                                @Override
                                public void run() {
                                    callbackChannel.invokeMethod(
                                        "Callback::com.amap.api.maps.AMap.OnIndoorBuildingActiveListener::OnIndoorBuilding",
                                        new HashMap<String, Object>() {{
                                            put("var1", argvar1);
                                        }}
                                    );
                                }
                            });
            
                            // method result
            
                        }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    __methodResult__.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                __methodResult__.success(jsonableResult);
            });
        }};
    }
}
